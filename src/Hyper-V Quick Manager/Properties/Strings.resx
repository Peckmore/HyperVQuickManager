<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Menu_TurnOff" xml:space="preserve">
    <value>Turn Off...</value>
  </data>
  <data name="Menu_ShutDown" xml:space="preserve">
    <value>Shut Down...</value>
  </data>
  <data name="Menu_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Menu_Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Menu_Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Menu_Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Menu_HyperVManager" xml:space="preserve">
    <value>Hyper-V Manager</value>
  </data>
  <data name="Menu_Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Menu_Connect" xml:space="preserve">
    <value>Connect...</value>
  </data>
  <data name="State_Running" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="State_Stopped" xml:space="preserve">
    <value>Stopped</value>
  </data>
  <data name="State_Paused" xml:space="preserve">
    <value>Paused</value>
  </data>
  <data name="State_Saved" xml:space="preserve">
    <value>Saved</value>
  </data>
  <data name="State_Starting" xml:space="preserve">
    <value>Starting</value>
  </data>
  <data name="State_Saving" xml:space="preserve">
    <value>Saving</value>
  </data>
  <data name="State_Stopping" xml:space="preserve">
    <value>Stopping</value>
  </data>
  <data name="State_Pausing" xml:space="preserve">
    <value>Pausing</value>
  </data>
  <data name="State_Resuming" xml:space="preserve">
    <value>Resuming</value>
  </data>
  <data name="State_Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="Menu_Resume" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="State_Resetting" xml:space="preserve">
    <value>Resetting</value>
  </data>
  <data name="Menu_ConnectAndStart" xml:space="preserve">
    <value>Connect and Start...</value>
  </data>
  <data name="State_Critical" xml:space="preserve">
    <value>Critical</value>
  </data>
  <data name="Menu_ConnectAndResume" xml:space="preserve">
    <value>Connect and Resume...</value>
  </data>
  <data name="Menu_AllVirtualMachines" xml:space="preserve">
    <value>All Virtual Machines</value>
  </data>
  <data name="Error_Unsupported_Text" xml:space="preserve">
    <value>{0} is only supported on Windows 8 or later and Windows Server 2008 or later.</value>
  </data>
  <data name="Error_Unsupported_InstructionText" xml:space="preserve">
    <value>{0} is not supported on this Operating System.</value>
  </data>
  <data name="Balloon_Message" xml:space="preserve">
    <value>'{0}' is now {1}</value>
  </data>
  <data name="Balloon_MessageExtensionCritical" xml:space="preserve">
    <value> but is in a critical state</value>
  </data>
  <data name="Balloon_Title" xml:space="preserve">
    <value>Virtual Machine {0}</value>
  </data>
  <data name="Error_ChangeState_InstructionText" xml:space="preserve">
    <value>An error occured while attempting to change the state of '{0}'.</value>
  </data>
  <data name="Error_ChangeState_InstructionTextMultiple" xml:space="preserve">
    <value>An error occured while attempting to change the state of one or more virtual machines.</value>
  </data>
  <data name="Error_ChangeState_TextMultiple" xml:space="preserve">
    <value>{0} machines failed to change state.</value>
  </data>
  <data name="Service_Description" xml:space="preserve">
    <value>Provides support for running {0}.</value>
  </data>
  <data name="StateChangeResponse_CompletedwithNoError" xml:space="preserve">
    <value>Completed successfully</value>
  </data>
  <data name="StateChangeResponse_MethodParametersCheckedTransitionStarted" xml:space="preserve">
    <value>Method Parameters Checked - Transition Started</value>
  </data>
  <data name="StateChangeResponse_Failed" xml:space="preserve">
    <value>Command failed</value>
  </data>
  <data name="StateChangeResponse_AccessDenied" xml:space="preserve">
    <value>Access denied</value>
  </data>
  <data name="StateChangeResponse_NotSupported" xml:space="preserve">
    <value>Command not supported</value>
  </data>
  <data name="StateChangeResponse_StatusIsUnknown" xml:space="preserve">
    <value>Virtual Machine status is unknown</value>
  </data>
  <data name="StateChangeResponse_Timeout" xml:space="preserve">
    <value>A timeout occured</value>
  </data>
  <data name="StateChangeResponse_InvalidParameter" xml:space="preserve">
    <value>An invalid parameter was specified</value>
  </data>
  <data name="StateChangeResponse_SystemIsInUse" xml:space="preserve">
    <value>The system is in use</value>
  </data>
  <data name="StateChangeResponse_InvalidStateForThisOperation" xml:space="preserve">
    <value>The Virtual Machine is in an invalid state for this operation</value>
  </data>
  <data name="StateChangeResponse_IncorrectDataType" xml:space="preserve">
    <value>An incorrect data type was specified</value>
  </data>
  <data name="StateChangeResponse_SystemIsNotAvailable" xml:space="preserve">
    <value>The system is not available</value>
  </data>
  <data name="StateChangeResponse_OutOfMemory" xml:space="preserve">
    <value>Out of memory</value>
  </data>
  <data name="StateChangeResponse_UnknownError" xml:space="preserve">
    <value>An unknown error occured</value>
  </data>
  <data name="Error_RequiresAdminDesktop_InstructionText" xml:space="preserve">
    <value>{0} requires administrative rights.</value>
  </data>
  <data name="Error_RequiresAdminDesktop_Text" xml:space="preserve">
    <value>{0} requires administrative rights when run in standalone mode. To run without requiring administrative rights you can install the application as a Windows Service.</value>
  </data>
  <data name="Error_RequiresAdminService" xml:space="preserve">
    <value>{0} must be run as a user account that has administrative rights on this computer.</value>
  </data>
  <data name="Error_RequiresAdminToInstall_InstructionText" xml:space="preserve">
    <value>Administrative rights are required to install {0} as a Windows Service.</value>
  </data>
  <data name="Error_RequiresAdminToInstall_Text" xml:space="preserve">
    <value>{0} requires administrative rights in order to install as a Windows Service. Please run the command line again from an elevated command prompt.</value>
  </data>
  <data name="Error_ServiceFailedToStart" xml:space="preserve">
    <value>The service failed to start with the following error: {0}</value>
  </data>
</root>